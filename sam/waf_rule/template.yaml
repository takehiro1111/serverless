AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for waf rule create and delete

Globals:
  Function:
    Timeout: 5
    MemorySize: 128
    CodeUri: function/
    Runtime: python3.12
    Architectures:
        - x86_64

    LoggingConfig:
      LogFormat: JSON

Resources:
  DeleteWAFRuleFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: waf_delete.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn

  ReCreateWAFRuleFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: waf_recreate.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
  
  MonitorWAFRuleFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: daily_monitor.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn      

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: waf_rule_update_lambda_execution_role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: logs_policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: 'arn:aws:logs:ap-northeast-1:*:log-group:*:*'

        - PolicyName: ssm_policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                Resource: 'arn:aws:ssm:ap-northeast-1:*:*'

        - PolicyName: waf_policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - wafv2:UpdateWebACL
                  - wafv2:ListWebACLs
                  - wafv2:GetWebACL
                  - wafv2:DeleteRule
                  - wafv2:CreateRule
                Resource: 'arn:aws:wafv2:us-east-1:*:global/webacl/*/*'

  SchedulerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: scheduler.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: InvokeLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource: !GetAtt MonitorWAFRuleFunction.Arn

  # DeleteWafRuleEventRule:
  #   Type: AWS::Events::Rule
  #   Properties:
  #     EventPattern:
  #       source:
  #         - aws.waf
  #       detail-type:
  #         - AWS API Call via CloudTrail
  #       detail:
  #         eventSource:
  #           - waf.amazonaws.com
  #         eventName:
  #           - UpdateWebACL
  #     Targets:
  #       - Arn: !GetAtt DeleteWAFRuleFunction.Arn # 削除時にSlack通知する関数を指定予定
  #         Id: 'WafDeleteLambdaFunctionTarget'

  # RecreateWafRuleEventRule:
  #   Type: AWS::Events::Rule
  #   Properties:
  #     EventPattern:
  #       source:
  #         - aws.waf
  #       detail-type:
  #         - AWS API Call via CloudTrail
  #       detail:
  #         eventSource:
  #           - waf.amazonaws.com
  #         eventName:
  #           - UpdateWebACL
  #         requestParameters:
  #           rules:
  #             - name
  #               - CountOtherRegions
  #     Targets:
  #       - Arn: !GetAtt ReCreateWAFRuleFunction.Arn # 再作成時にSlack通知する関数を指定予定
  #         Id: 'WafRecreateLambdaFunctionTarget'

  MnitorCronEventBridge:
    Type: AWS::Scheduler::Schedule
    Properties:
      Name: waf-monitor
      Description: Cron to monitor Lambda every hour
      ScheduleExpression: cron(30 23 ? * MON-FRI *)
      ScheduleExpressionTimezone: Asia/Tokyo
      State: ENABLED
      FlexibleTimeWindow:
          MaximumWindowInMinutes: 15
          Mode: "FLEXIBLE"
      Target:
        Arn: !GetAtt MonitorWAFRuleFunction.Arn
        RoleArn: !GetAtt SchedulerExecutionRole.Arn



  # EventBridgeがLambda関数を呼び出す権限を定義している。
  # DeleteWafRuleLambdaPermission:
  #   Type: AWS::Lambda::Permission
  #   Properties:
  #     FunctionName: !Ref DeleteWAFRuleFunction
  #     Action: lambda:InvokeFunction
  #     Principal: events.amazonaws.com
  #     SourceArn: !GetAtt DeleteWafRuleEventRule.Arn  # 削除時にSlack通知する関数を指定予定

  # RecreateWafRuleLambdaPermission:
  #   Type: AWS::Lambda::Permission
  #   Properties:
  #     FunctionName: !Ref ReCreateWAFRuleFunction
  #     Action: lambda:InvokeFunction
  #     Principal: events.amazonaws.com
  #     SourceArn: !GetAtt RecreateWafRuleEventRule.Arn # 再作成時にSlack通知する関数を指定予定

  MonitorWafRuleLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref MonitorWAFRuleFunction
      Action: lambda:InvokeFunction
      Principal: scheduler.amazonaws.com
      SourceArn: !GetAtt MnitorCronEventBridge.Arn


  SlackWebhookParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /waf_update_rule/SLACK_WEBHOOK
      Type: String # CloudFromationではSecureStringがサポートされていない。
      Value: '画面上で設定する'


# Outputs:
#   LambdaExecutionRoleArn:
#     Description: ARN of the Lambda Execution Role
#     Value: !GetAtt LambdaExecutionRole.Arn

#   SlackWebhookParameterName:
#     Description: Name of the Slack Webhook SSM Parameter
#     Value: !Ref SlackWebhookParameter

#   DeleteWAFRuleFunctionArn:
#     Description: ARN of the Delete WAF Rule Lambda function
#     Value: !GetAtt DeleteWAFRuleFunction.Arn

#   ReCreateWAFRuleFunctionArn:
#     Description: ARN of the Recreate WAF Rule Lambda function
#     Value: !GetAtt RecreateWAFRuleFunction.Arn

  # EventRuleArn:
  #   Description: ARN of the EventBridge rule
  #   Value: !GetAtt WafRuleUpdateEventRule.Arn
