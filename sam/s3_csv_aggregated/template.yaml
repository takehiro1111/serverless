AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  S3Thumbnail

Globals:
  Function:
    Timeout: 60
    MemorySize: 128
    CodeUri: function
    Runtime: python3.12
    Architectures:
        - x86_64
    LoggingConfig:
      LogFormat: JSON

Parameters:
  Environment:
    Type: String
    Default: dev
    Description: Environment name
  ProjectName:
    Type: String
    Default: event-bucket
    Description: Project name

Resources:
  #######################################################
  # Lambda Function
  #######################################################
  CSVAggregateFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: csv-aggregate
      Handler: app.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref CSVAggregateTable
          GMAIL: !Ref GmailAddressParameterStore
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: !Ref CSVAggregateSrcBucket
            # https://docs.aws.amazon.com/ja_jp/AmazonS3/latest/userguide/notification-how-to-event-types-and-destinations.html#supported-notification-event-types
            Events:
              - s3:ObjectCreated:*
      EventInvokeConfig:
        DestinationConfig:
          OnSuccess:
            Type: SNS  # または SQS, Lambda, EventBridge
            Destination: !Ref GmailAddressSNS  # 成功時の送信先
          OnFailure:
            Type: SNS
            Destination: !Ref GmailAddressSNS  # 失敗時の送信先
        MaximumEventAgeInSeconds: 3600  # イベントの最大有効期間
        MaximumRetryAttempts: 2  # 再試行回数

  #######################################################
  # Cloudwatch Logs
  #######################################################
  CSVAggregateLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${CSVAggregateFunction}
      RetentionInDays: 7

  #######################################################
  # IAM Role
  #######################################################
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: s3-csv-aggregate-lambda-execution-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole

      Policies:
        - PolicyName: logs_policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: 'arn:aws:logs:ap-northeast-1:*:log-group:*:*'

        - PolicyName: ssm_policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                Resource: 'arn:aws:ssm:ap-northeast-1:*:*'

        - PolicyName: s3_policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetBucketAcl"
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:ListBucket"
                Resource: "arn:aws:s3:::*"

        - PolicyName: dynamodb
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "dynamodb:PutItem"
                Resource: !GetAtt CSVAggregateTable.Arn

        - PolicyName: SNSPublishPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - sns:Publish
                Resource: !Ref GmailAddressSNS

  #######################################################
  # DynamoDB
  #######################################################
  CSVAggregateTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "csv-aggregate"
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        - AttributeName: "date"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id" # パーティションキー（HASH）
          KeyType: "HASH"
        - AttributeName: "date" # ソートキー（RANGE）
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"

  #######################################################
  # S3
  #######################################################
  CSVAggregateSrcBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub ${ProjectName}-csv-src-${Environment}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Env
          Value: SAM

  CSVAggregateDSTBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub ${ProjectName}-csv-dst-${Environment}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Env
          Value: SAM

  #######################################################
  # SSM ParameterStore
  #######################################################
  GmailAddressParameterStore:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /master/lambda/GMAILADDRESS
      Type: String
      Description: My Gmail Address
      Value: '画面上で設定する'

  #######################################################
  # SNS
  #######################################################
  GmailAddressSNS:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: Gmail
      Subscription: 
        - Endpoint: !Sub "{{resolve:ssm:/master/lambda/GMAILADDRESS}}" 
          Protocol: email
      