"""C039:古代の数式
考古学者兼ITエンジニアであるあなたはパイザ遺跡の発掘に成功し、そこに数式のようなものが刻まれていることに気づきました。


図1

あなたはこの数式の記法をパイザ記法と命名し、解読を試みたところ、以下のルールを見つけ出しました。


・数式はすべて 2 個以上の整数の足し算となっている
・使用する整数は 1 から 99 までで、10 進法を用いる
・連続する "<" の数が整数の 10 の位を表し、それに続く連続する "/" (スラッシュ) の数が整数の 1 の位を表す
・"+" が足し算の記号を表す


このルールをもとに、パイザ記法で書かれた数式を解釈し、その結果を返すプログラムを作成してください。なお、上記のルールで解釈不能な入力は与えられません。

例)


///+////
→ 3 + 4 = 7


//+//////
→ 2 + 6 = 8


次の例は上の図を入力とした場合を示しています。


<///////+<<</+////
→ 17 + 31 + 4 = 52

入力例1
///+////

出力例1
7
"""


# 関数を定義
def parse_number(s):
    # 記号に設定されている単位を定義
    tens = s.count("<")
    ones = s.count("/")

    # 10の位と1の位を加算する。
    return (tens * 10) + ones


# 記号の入力を受け取る。
paiza = input()
result = parse_number(paiza)

print(result)
