name: s3-Conversion
run-name: ${{ github.workflow }} by @${{ github.actor }}

on:
  push:
    branches:
      - 'main'
    paths:
      - 'sam/s3-conversion/func/**'
      - '.github/workflows/s3_conversion.yaml'
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-1
  IAM_ROLE_ARN: arn:aws:iam::685339645368:role/deploy-github-actions
  SLACK_CHANNEL_NAME: lambda_notify

permissions:
  id-token: write
  contents: read

jobs:
  sam:
    name: sam deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sam/s3-conversion
    timeout-minutes: 60
    steps: # ref:https://docs.aws.amazon.com/ja_jp/serverless-application-model/latest/developerguide/deploying-using-github.html
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - uses: actions/setup-python@v5

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      # SAM„Éì„É´„Éâ„ÅÆ„Ç≠„É£„ÉÉ„Ç∑„É•
      - uses: actions/cache@v4
        with:
          path: .aws-sam/build
          key: ${{ runner.os }}-sam-build-${{ hashFiles('**/*.py') }}

      - uses: aws-actions/setup-sam@v2

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{env.AWS_REGION}}
          role-to-assume: ${{ env.IAM_ROLE_ARN }}
          role-session-name: ${{ github.workflow }}
          #CloudTrail„É≠„Ç∞Á≠â„ÅÆÁõ£Êüª„É≠„Ç∞„Åß„Å©„ÅÆ„Çª„ÉÉ„Ç∑„Éß„É≥„Åå„Å©„ÅÆÊìç‰Ωú„ÇíË°å„Å£„Åü„ÅÆ„Åã„ÇíËøΩË∑°„Åô„Çã„Åü„ÇÅ„Å´Ë®≠ÂÆö„ÄÇ

      - name: SAM Build
        run: sam build --use-container
        if: success()
      - name: SAM Deploy
        run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset
        if: success()

      - if: always()
        name: Slack Notification
        uses: rtCamp/action-slack-notify@e31e87e03dd19038e411e38ae27cbad084a90661 # v2.3.3
        env:
          SLACK_CHANNEL: ${{ env.SLACK_CHANNEL_NAME }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_USERNAME: SAM
          SLACK_MESSAGE: 'deploy success'
          SLACK_TITLE: SAM ResultüöÄ
          SLACK_WEBHOOK: ${{ secrets.WEBHOOK_URL }}
